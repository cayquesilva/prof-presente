version: "3.8"

services:
  # Serviço do Backend (API)
  backend:
    image: cayquesilva/prof-presente-backend:latest
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@prof_presente_db:5432/${POSTGRES_DB}?schema=public
      - JWT_SECRET=${JWT_SECRET}
      - PORT=${PORT}
      - NODE_ENV=${NODE_ENV}
      - CORS_ORIGIN=${CORS_ORIGIN}
    volumes:
      - backend_uploads:/app/uploads
    networks:
      # Essencial: Conectado a ambas as redes
      - SimpliSoft
      - prof-presente-internal
    depends_on:
      - prof_presente_db
    command: >
      sh -c "
        echo 'Aguardando 20 segundos extras para estabilização da rede...' &&
        sleep 20 &&
        echo 'Rodando prisma migrade deploy...' &&
        npx prisma migrate deploy &&
        echo 'Rodando a seed com dados iniciais...' &&
        npm run db:seed &&
        echo 'Iniciando container...' &&
        npm start
      "
    deploy:
      replicas: 1
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=SimpliSoft"
        - "traefik.http.routers.prof-presente-api.rule=Host(`api.checkin.simplisoft.com.br`)"
        - "traefik.http.routers.prof-presente-api.entrypoints=websecure"
        - "traefik.http.routers.prof-presente-api.tls.certresolver=letsencryptresolver"
        - "traefik.http.services.prof-presente-api.loadbalancer.server.port=3000"

  # Serviço do Frontend (React + Nginx)
  frontend:
    # ALTERAÇÃO: Aponta para a imagem no Docker Hub e remove a seção 'build'
    image: cayquesilva/prof-presente-frontend:latest
    environment:
      - VITE_API_URL=https://api.checkin.simplisoft.com.br/api
    networks:
      - SimpliSoft
    depends_on:
      - backend
    deploy:
      replicas: 1
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=SimpliSoft"
        - "traefik.http.routers.prof-presente-app.rule=Host(`checkin.simplisoft.com.br`)"
        - "traefik.http.routers.prof-presente-app.entrypoints=websecure"
        - "traefik.http.routers.prof-presente-app.tls.certresolver=letsencryptresolver"
        - "traefik.http.services.prof-presente-app.loadbalancer.server.port=80"

  # Serviço do Banco de Dados (PostgreSQL)
  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - prof-presente-internal
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      placement:
        constraints: [node.role == manager]

volumes:
  db_data:
  backend_uploads:

networks:
  prof-presente-internal:
    driver: overlay
  SimpliSoft:
    external: true
